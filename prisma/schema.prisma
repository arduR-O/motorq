// schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Request {
  id         Int           @id @default(autoincrement())
  driverId   Int
  vehicleId  Int
  status     RequestStatus @default(PENDING)
  startTime  DateTime
  endTime    DateTime
  driver     Driver        @relation(fields: [driverId], references: [id])
  vehicle    Vehicle       @relation(fields: [vehicleId], references: [id])
}

enum RequestStatus {
  PENDING
  APPROVED
  REJECTED
}

model Driver {
  id         Int         @id @default(autoincrement())
  name       String
  email      String      @unique
  phone      String
  location   String
  requests   Request[]
  assignments Assignment[]
}

model Vehicle {
  id         Int         @id @default(autoincrement())
  model      String
  license    String      @unique
  requests   Request[]
  assignments Assignment[]
}

model Assignment {
  id        Int      @id @default(autoincrement())
  driverId  Int
  vehicleId Int
  startTime DateTime
  endTime   DateTime
  driver    Driver   @relation(fields: [driverId], references: [id])
  vehicle   Vehicle  @relation(fields: [vehicleId], references: [id])

  @@unique([driverId, startTime, endTime])
  @@unique([vehicleId, startTime, endTime])
}